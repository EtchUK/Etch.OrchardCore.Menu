@inject IOptions<AutorouteOptions> AutorouteOptions

@inject OrchardCore.ContentManagement.Display.IContentItemDisplayManager ContentItemDisplayManager
@inject OrchardCore.DisplayManagement.ModelBinding.IUpdateModelAccessor ModelUpdaterAccessor

@{
    ContentItem contentItem = Model.ContentItem;
    var menuItems = contentItem.As<MenuItemsListPart>();
    var emailMenuItemPart = contentItem.Content.EmailMenuItem;
    var index = 0;

    var label = emailMenuItemPart?.Label?.Text.Value ?? string.Empty;
    var emailAddress = emailMenuItemPart?.EmailAddress?.Text.Value ?? string.Empty;
}

<li class="menu-item list-group-item" id="menu-id-@Model.Index" data-index="@Model.Index">
    <div class="menu-item menu-item-title border rounded p-2 ps-3 mb-1 d-flex flex-row justify-content-between align-items-center ui-sortable-handle">
        <span>@label <code>@emailAddress</code> <span class="text-muted dashed">@T["Email"]</span></span>

        <div class="float-end">
            <a asp-action="Edit"
                asp-controller="Admin"
                asp-route-area="OrchardCore.Menu"
                asp-route-menuContentItemId="@Model.MenuPart.ContentItem.ContentItemId"
                asp-route-menuItemId="@Model.ContentItem.ContentItemId"
                class="btn btn-success btn-sm">
                @T["Edit"]
            </a>
            <button type="button" class="btn btn-primary btn-sm " data-toggle="modal" data-target="#modalMenuItems" data-menuitemid="@Model.ContentItem.ContentItemId">
                @T["Add"]
            </button>
            <a asp-action="Delete"
                asp-controller="Admin"
                asp-route-area="OrchardCore.Menu"
                asp-route-menuContentItemId="@Model.MenuPart.ContentItem.ContentItemId"
                asp-route-menuItemId="@Model.ContentItem.ContentItemId"
                itemprop="RemoveUrl UnsafeUrl"
                class="btn btn-danger btn-sm">
                @T["Delete"]
            </a>
        </div>
    </div>

    <ol class="menu-item menu-item-links">
        @if (menuItems != null)
        {
            var updater = ModelUpdaterAccessor.ModelUpdater;

            @foreach (var menuItem in menuItems.MenuItems)
            {

                dynamic menuItemShape = await ContentItemDisplayManager.BuildDisplayAsync(menuItem, updater, "Admin");
                menuItemShape.MenuPart = Model.MenuPart;
                menuItemShape.Index = Model.Index + "-" + index++;
                @await DisplayAsync(menuItemShape)
            }
        }
    </ol>
</li>